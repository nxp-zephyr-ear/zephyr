Release: EAR4.0

Changes from EAR3.0:
- Added Support for CTIMER counter
- Enabled support for driving ST7796S based display using LCDIC

Product release candidate of Zephyr for the NXP RW61x Reference Design
=================================================================

Release: EAR3.0

This document summarizes the contents of the product release candidate for
the Zephyr support of the NXP RW61X reference design.


BLE support
============

Changes from EAR2.0:
- Increased maximal connections for bt_tester application to 16
- Enabled self low power control for the BLE controller.
- Support of BLE bonding. NVS back-end storage can be
  used to store settings.

BLE applications supported in this release are:
	- peripheral_ht   (samples/bluetooth/peripheral_ht)
	- central_ht      (samples/bluetooth/central_ht)
	- peripheral_ots  (samples/bluetooth/peripheral_ots)
	- peripheral_dis  (samples/bluetooth/peripheral_dis)
	- bt_tester       (tests/bluetooth/tester)
	- shell           (tests/bluetooth/shell)
	- peripheral      (samples/bluetooth/peripheral)

`peripheral` application can be used to experiment the bonding process.

Limitations:
	- Hardware accelerators for security cryptography are not supported yet.
	- Some shell BLE commands may be unsupported for now.
	- Low power with BLE is still undergoing trials. Therefore it's not enabled by default
	  for BLE applications. Please add this Kconfig `CONFIG_PM` to your application
	  to enable low power capabilities.
	  Low power was only tested on peripheral_ht and central_ht.
	- Enforcement of ATT flow control (BT_ATT_ENFORCE_FLOW) is disabled
	  for all BLE applications.


Base Enablement
===============

- Support for the display module has the following improvements from EAR2.0:
	- Rendering performance has been improved with double bufferring
	- Support for touchscreen IC FT7401 has been enabled
- Added support for the general analog unit digital-to-analog converter (GAU DAC)
- Enablement of existing eth_mcux ethernet on rd_rw612_bga board
- Corrected number of USB endpoints
- Updated SOC initialization to re-enable voltage glitch detect sensor after clock setup


Early Access Release of Zephyr for the NXP RW61x Reference Design
=================================================================

Release: EAR2.0

This document summarizes the contents of the early access release for
the Zephyr support of the NXP RW61X reference design.

Changes from: 1.1
- Suppressed spi_bus_bridge DT warning
- Add NXP HCI Driver
- Add BLE support for RW61X
- Implement MCUX OSA API
- Partition image using DT code partitions
  in order to reserve firmware storage partition
- Added doc page for RD_RW612_BGA
- Enable TRNG
- Add sensor driver enabling GAU ACOMP
- Added NXP WIFI driver adapter layer
- Added support for FlexSPI with external PSRAM and NOR Flash
- Enabled support for MCUBoot and LittleFS
- Added support for loading image to SRAM using ROM
- Reworked GAU ADC driver, including devicetree binding updates
- Switched to optimized memcpy implementation (fsl_memcpy) when using newlib
- Removed MPU regions for SMU1 and SMU2, freeing 2 MPU regions for user
  applications. Please note these MPU regions may sometimes be required
  in an application overlay when using newlib

Changes from: 1.0
- Updated HAL to match latest internal SDK for RW61X
- Fixed watchdog not resetting bug
- Renamed board from rdrw610_evk to rd_rw612_bga
- Board now uses RW612 HAL instead of RW610
- A1 Silicon now supported, debug issue fixed
- Misc changes to SOC/series definition & enablement

Repositories:
=============

- Zephyr

   Repository: git@github.com:nxp-ea-7/zephyr.git
   Branch: rw61x_ear_v3.4.0
   Tag: rw61x_ear_2.0

- HAL for RW61X

   Repository: git@github.com:nxp-ea-7/nxp_hal.git
   Branch: feature/rw61x_v3.4.0
   Tag: rw61x_ear_2.0


Features included:
==================

SOC/Board Devicetree
GPIO
UART
I2C
I2S
Pin Control
USB
ADC
Counter
DMA
PWM
SPI
DISPLAY (SPI driver st7796s display controller)

Known issues
============

1 samples/subsys/usb/cdc_acm_composite/sample.usb.cdc-acm-composite test failure

BLE support
============

BLE applications supported in this release are:
	- peripheral_ht 	(samples/bluetooth/peripheral_ht)
	- central_ht		(samples/bluetooth/central_ht)
	- peripheral_ots	(samples/bluetooth/peripheral_ots)
	- peripheral_dis	(samples/bluetooth/peripheral_dis)
	- bt_tester		(tests/bluetooth/bt_tester)
	- shell			(tests/bluetooth/shell)

Limitations:
	- Low power not supported yet for BLE applications.
	- Hardware accelerators for security cryptography are not supported yet.
	- Storage back-ends (NVS, FCB, File system) are not supported yet. This impacts applications
	  that are using the settings subsystem, as is the case for the shell application.
	  Some warnings / errors related to settings storage may be logged by this application.
	- Some shell BLE commands may be unsupported for now.
	- Enforcement of ATT flow control (BT_ATT_ENFORCE_FLOW) prevent some applications to connect
	  with the peer device. This feature is disabled for now for the concerned application.

Wi-Fi support
============

Features included
    - 802.11b/g/a/n/ac/ax
    - 802.11d/k/v/w
    - 802.11y (ECSA)
    - 802.11e (WMM)
    - 802.11i
    - Wi-Fi STA and MicroAP Mode
    - Wi-Fi IEEE power save
    - Wi-Fi Secure FW boot
    - wpa_supplicant
        open/wpa2/wpa3
        WPS
        802.1x (EAP-TLS, EAP-PEAPv0/MSCHAPv2, EAP-PEAPv1/GTC, EAP-TTLS/MSCHAPv2)
        Wi-Fi Eascy Connect (DPP)
        STA mode Auto reconnect

Wi-Fi applications supported in this release are
    - wifi                      (samples/net/wifi)
    - MFG tools                 (samples/boards/rd_rw612_bga/nxp_mfg_bridge)

Limitations
    - wpa_supplicant hardware accelerators for security cryptography are not supported yet

How to get the code
===================

Use the getting Zephyr started guide to setup your development environment. However,
the west init command is as follows:

 $ west init -m git@github.com:nxp-ea-7/zephyr.git -â€“mr rw61x_ear_v3.4.0

Then, run:
 $ west update

The Zephyr getting started guide can be found at: https://docs.zephyrproject.org/latest/develop/getting_started/index.html


