# RW6XX Series

# Copyright (c) 2022, NXP
# SPDX-License-Identifier: Apache-2.0

choice
	prompt "RW6XX Series MCU Selection"
	depends on SOC_SERIES_RW6XX

config SOC_RW610
	bool "SOC_RW610"

config SOC_RW612
	bool "SOC_RW612"

endchoice

if SOC_SERIES_RW6XX

choice SOC_SERIES_RW6XX_REVISION
	prompt "RW6XX soc revision"
	default SOC_SERIES_RW6XX_REVISION_A2

config SOC_SERIES_RW6XX_REVISION_A1
	bool "RWXX soc revision A1"

config SOC_SERIES_RW6XX_REVISION_A2
	bool "RWXX soc revision A2"
endchoice

config SOC_PART_NUMBER_RW612ETA1I
	bool

config SOC_PART_NUMBER_RW612HNA1I
	bool

config SOC_PART_NUMBER_RW612UKA1I
	bool

config SOC_PART_NUMBER_RW610ETA1I
	bool

config SOC_PART_NUMBER_RW610HNA1I
	bool

config SOC_PART_NUMBER_RW610UKA1I
	bool

config SOC_PART_NUMBER_RW6XX
	string
	default "RW612ETA1I" if SOC_PART_NUMBER_RW612ETA1I
	default "RW612HNA1I" if SOC_PART_NUMBER_RW612HNA1I
	default "RW612UKA1I" if SOC_PART_NUMBER_RW612UKA1I
	default "RW610ETA1I" if SOC_PART_NUMBER_RW610ETA1I
	default "RW610HNA1I" if SOC_PART_NUMBER_RW610HNA1I
	default "RW610UKA1I" if SOC_PART_NUMBER_RW610UKA1I
	help
	  This string holds the full part number of the SoC. It is a hidden
	  option that you should not set directly. The part number selection
	  choice defines the default value for this string.

config INIT_SYS_PLL
	bool "Initialize SYS PLL"

menuconfig NXP_RW6XX_BOOT_HEADER
	bool "Create boot header"
	help
	  Create data structures required by the boot ROM to boot the
	  application from an external flash device.

if NXP_RW6XX_BOOT_HEADER

choice BOOT_DEVICE
	prompt "Boot device selection"
	default BOOT_FLEXSPI_NOR

config BOOT_FLEXSPI_NOR
	bool "FlexSPI serial NOR"

endchoice

config FLASH_CONFIG_OFFSET
	hex "Flash config data offset"
	default 0x400
	help
	  The flash config offset provides the boot ROM with the on-board
	  flash type and parameters. The boot ROM requires a fixed flash conifg
	  offset for FlexSPI device.

config IMAGE_VECTOR_TABLE_OFFSET
	hex "Image vector table offset"
	default 0x1000
	help
	  The Image Vector Table (IVT) provides the boot ROM with pointers to
	  the application entry point and device configuration data. The boot
	  ROM requires a fixed IVT offset for each type of boot device.


config NXP_RW_ROM_RAMLOADER
	depends on !FLASH_MCUX_FLEXSPI_XIP
	# Required so that debugger will load image to correct offset
	select BUILD_OUTPUT_HEX
	bool "Create output image that RW ROM can load from FlexSPI to ram"
	help
	  Builds an output image that the RW BootROM can load from the
	  FlexSPI boot device into RAM region. The image will be loaded
	  from FLEXSPI into the region specified by `zephyr,flash` node.

# Setup LMA adjustment if using the RAMLOADER feature of ROM
FLASH_CHOSEN := zephyr,flash
FLASH_BASE := $(dt_chosen_reg_addr_hex,$(FLASH_CHOSEN))
FLEXSPI_BASE := $(dt_node_reg_addr_hex,/soc/spi@134000,1)
config BUILD_OUTPUT_ADJUST_LMA
	default "$(FLEXSPI_BASE) - $(FLASH_BASE)" if NXP_RW_ROM_RAMLOADER

endif # NXP_RW6XX_BOOT_HEADER

config XTAL32K
	bool "Use the External 32K clock"
	help
	  This clock is used by certain peripherals such as RTC.

endif # SOC_SERIES_RW6XX
